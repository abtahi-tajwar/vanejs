import{_ as e,c as s,o as t,ae as i}from"./chunks/framework.BtEkjhVd.js";const c=JSON.parse('{"title":"State Management","description":"","frontmatter":{},"headers":[],"relativePath":"api/state-management.md","filePath":"api/state-management.md"}'),n={name:"api/state-management.md"};function l(h,a,p,r,o,d){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="state-management" tabindex="-1">State Management <a class="header-anchor" href="#state-management" aria-label="Permalink to &quot;State Management&quot;">​</a></h1><p>VaneJS provides a simple but powerful state management system through a set of global functions.</p><h2 id="core-api-functions" tabindex="-1">Core API Functions <a class="header-anchor" href="#core-api-functions" aria-label="Permalink to &quot;Core API Functions&quot;">​</a></h2><h3 id="setstate-name-obj" tabindex="-1">$setState(name, obj) <a class="header-anchor" href="#setstate-name-obj" aria-label="Permalink to &quot;$setState(name, obj)&quot;">​</a></h3><p>Creates or updates a global state with the given name and value.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$setState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>name</code> (string): The identifier for the state</li><li><code>obj</code> (any): The value to store in the state</li></ul><h3 id="getstate-name" tabindex="-1">$getState(name) <a class="header-anchor" href="#getstate-name" aria-label="Permalink to &quot;$getState(name)&quot;">​</a></h3><p>Retrieves the current value of a state by its name.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $getState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;John&#39;</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>name</code> (string): The identifier of the state to retrieve</li></ul><p><strong>Returns:</strong></p><ul><li>The current value of the state</li></ul><h3 id="updatestate-name-obj" tabindex="-1">$updateState(name, obj) <a class="header-anchor" href="#updatestate-name-obj" aria-label="Permalink to &quot;$updateState(name, obj)&quot;">​</a></h3><p>Updates an existing state with new values while triggering reactive updates.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$updateState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>name</code> (string): The identifier of the state to update</li><li><code>obj</code> (any): The new value for the state</li></ul><h3 id="deletestate-name" tabindex="-1">$deleteState(name) <a class="header-anchor" href="#deletestate-name" aria-label="Permalink to &quot;$deleteState(name)&quot;">​</a></h3><p>Removes a state from the global state management system.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$deleteState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>name</code> (string): The identifier of the state to delete</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li>Always use <code>$updateState</code> when modifying existing state to ensure proper reactive updates</li><li>Keep state objects flat when possible for better performance</li><li>Use meaningful state names to maintain code clarity</li><li>Consider using namespacing in state names for larger applications (e.g., &#39;users.active&#39;, &#39;users.pending&#39;)</li></ol>`,27)]))}const g=e(n,[["render",l]]);export{c as __pageData,g as default};
